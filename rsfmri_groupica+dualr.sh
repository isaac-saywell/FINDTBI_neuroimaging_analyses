#!/bin/bash

# Group ICA test code

echo "Starting group independent component analysis."
sleep 2
echo "______"

## Setup - source config file

source config.sh

## Running group ICA

### Generating an input file for group ICA melodic command

if [ -e "input_files.txt" ]; then
    rm "input_files.txt"
else
    :
fi

find "$start_dir" -mindepth 1 -maxdepth 1 -type d | while read -r dir; do

    echo "${start_dir}"/$(basename "$dir")/melodic.ica/filtered_func_data_clean_standard.nii.gz >> input_files.txt

done

### Group ICA

echo "Running group ICA with "$group_comp" group components and repetition time (TR) "$tr" ..."
sleep 1
echo "______"
sleep 1

echo "Starting group ICA."
sleep 1
echo "______"
sleep 1

melodic -i input_files.txt -o groupICA_"${group_comp}" --tr=${tr} --nobet -a concat -m $FSLDIR/data/standard/MNI152_T1_2mm_brain_mask.nii.gz --report --Oall -d "${group_comp}"

echo "Group ICA finished."
sleep 1
echo "______"
sleep 1

## Visualising resting-state networks in dataset (produced via group ICA)

#### Group ICA is an extension of regular (single-subject) ICA that combines data from multiple subjects in a dataset.
#### It aims to identify common patterns (resting-state functional networks) in the dataset (across subjects), while also capturing single-subject variations.
#### This provides spatial maps of brain regions that exhibit synchronous activity across subjects - these networks may correspond to cognitive abilities 
#### and/or resting-state networks. From these group ICA components we can use dual regression to produce spatial maps of each group signal component (resting-state networks of interest)
#### for each individual subject.

echo "Visualising results of group ICA for "$group_comp" number of 'signal' components in standard space."

sleep 1
echo "______"
sleep 1

# fsleyes -std groupICA_"$group_comp"/melodic_IC.nii.gz -un -n 20 -cm red-yellow -nc blue-lightblue -dr 3 10 # check data
###### checking group ICA output has been commented out to make sure this script remains automated

sleep 1
echo "Group ICA components have been checked. Continuing with dual regression..."

sleep 1
echo "______"
sleep 1

## Dual regression

echo "Producing spatial maps and time series for each individual subject using group signal components generated by group ICA."

sleep 1
echo "______"
sleep 1

dual_regression groupICA_"$group_comp"/melodic_IC.nii.gz 1 -1 0 groupICA_"$group_comp"_dualr $(cat input_files.txt)

    ##### '1' represents whether or not to variance-normalise the timecourses used as the stage-2 regressiors ('1' is recommended over '0')
    ##### '-1' replaces the unpaired t-test files to be added to the command, for group-mean (one-group t-test) modelling
    ##### '0' represents not to run the third stage of dual regression (the randomise component), which requires a GLM to be specified to do group comparisons

    # Output explained

    ##### dr_stage1_subject[#SUB].txt - the timeseries outputs of stage 1 of the dual-regression. One text file per subject, each containing columns of timeseries - one timeseries per group-ICA component. 
    #####                               These timeseries can be fed into further network modelling, e.g., taking the N timeseries and generating an NxN correlation matrix.

    ##### dr_stage2_subject[#SUB].nii.gz - the spatial maps outputs of stage 2 of the dual-regression. One 4D image file per subject, and within each, one timepoint (3D image) per original group-ICA component. 
    #####                                  These are the GLM "parameter estimate" (PE) images, i.e., are not normalised by the residual within-subject noise. 
    #####                                  By default we recommend that it is these that are fed into stage 3 (the final cross-subject modelling).

    ##### dr_stage2_subject[#SUB]_Z.nii.gz - the Z-stat version of the above, which could be fed into the cross-subject modelling, but in general does not seem to work as well as using the PEs.

    ##### dr_stage2_ic[#ICA].nii.gz - the same as the PE images described above, but reorganised into being one 4D image file per group-ICA component, and, within each, having one timepoint (3D image) per subject. 
    #####                             This reorganisation is to allow stage 3, the cross-subject modelling for each group-ICA component - so it is these files that would normally be fed into randomise.

sleep 1
echo "______"
sleep 1

echo "Dual regression is complete. There should be single-subject spatial maps and time series in text files for each signal component."

sleep 1
echo "______"
sleep 1

echo "Ensure you note down components of interest while viewing subject and component images..."
sleep 3
echo "______"
sleep 1

## Visualising the data - subject by subject

while true; do 

    echo "Do you want to check each signal component (as separate image volumes) across individual subjects (y/n)?"
    read check

    sleep 1
    echo "______"
    sleep 1

    if [ "$check" = "y" ]; then

        echo "Looking at each subject specific signal component generated from group ICA and dual regression."
        sleep 1
        echo "______"
        sleep 1

        counter=0 # set counter

        find "$dirs" -maxdepth 1 -mindepth 1 -type d | sort | while read -r dir; do

            echo "Looking at subject $(basename "$dir")"
            sleep 1
            echo "______"
            sleep 1

            counter_padded=$(printf "%05d" "$counter") # format counter
            subj_spatialmap="dr_stage2_subject${counter_padded}_Z.nii.gz" # update subject spatial map per iteration to view each subject

            fsleyes "$dir/melodic.ica/filtered_func_data_clean_standard.nii.gz" "$script_path/groupICA_"$group_comp"_dualr/$subj_spatialmap" -un -cm red-yellow -nc blue-lightblue -dr 3 10 # check data

            echo "ICA components checked for subject $(basename "$dir")"

            sleep 1
            echo "______"
            sleep 1

            counter=$((counter + 1)) # increment counter

        done

        sleep 1
        echo "______"
        sleep 1

        echo "All subjects and their respective components have been looked at."

        sleep 1
        echo "______"
        sleep 1

        break
    elif [ "$check" = "n" ]; then 
        echo "Not checking all ICA components subject by subject."
        sleep 1
        echo "______"
        sleep 1
        break
    else
        echo "Invalid choice. Please enter 'y' or 'n'."
    fi
done

## Visualising the data - component by component

while true; do 

    echo "Do you want to check each signal component individually across each subjects (as separate image volumes) (y/n)?"
    read check

    sleep 1
    echo "______"
    sleep 1

    if [ "$check" = "y" ]; then

        echo "Looking at each ICA component generated from group ICA and dual regression."
        sleep 1
        echo "______"
        sleep 1

        counter=0 # set counter

        find "$dirs" -maxdepth 1 -mindepth 1 -type d | sort | while read -r dir; do

            echo "Looking at ICA component $counter"
            sleep 1
            echo "______"
            sleep 1

            counter_padded=$(printf "%04d" "$counter") # format counter
            subj_spatialmap="dr_stage2_ic${counter_padded}.nii.gz" # update spatial map per iteration to view each ICA component in each iteration

            fsleyes "groupICA_$group_comp/mean.nii.gz" "groupICA_"$group_comp"_dualr/$subj_spatialmap" -un -cm red-yellow -nc blue-lightblue -dr 30 100 # check data

            echo "ICA component "$counter" checked."

            sleep 1
            echo "______"
            sleep 1

            counter=$((counter + 1)) # increment counter

        done

        sleep 1
        echo "______"
        sleep 1

        echo "All ICA components have been viewed."

        sleep 1
        echo "______"
        sleep 1

        break
    elif [ "$check" = "n" ]; then 
        echo "Not checking all ICA components individually."
        sleep 1
        echo "______"
        sleep 1
        break
    else
        echo "Invalid choice. Please enter 'y' or 'n'."
    fi
done

echo "Group ICA and dual regression processing complete."